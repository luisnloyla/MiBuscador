/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package congregacion;
import CongregacionBE.MiBuscadorBE;
import CongregacionBL.cMiBuscadorBL;
import CongregacionBL.cMiBuscadorBLL;
import com.toedter.calendar.JDateChooser;
import ejecutar.Coneccion;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author luis
 */
public class MiBuscardor extends javax.swing.JFrame {
    int bandera = 0;
    /**
     * Creates new form Agenda
     */
    public MiBuscardor() throws SQLException {
        super("Mi Buscador");
        initComponents();       
        jdcFecha.setDate(new Date());
        jdcFechaFin.setDate(new Date());
//        Coneccion coneccion= new Coneccion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTema = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtList = new javax.swing.JTextArea();
        chkOnly = new javax.swing.JCheckBox();
        chkDate = new javax.swing.JCheckBox();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jdcFechaFin = new com.toedter.calendar.JDateChooser();
        btnSabe = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTema.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTemaKeyPressed(evt);
            }
        });

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyPressed(evt);
            }
        });

        txtList.setColumns(20);
        txtList.setRows(5);
        jScrollPane1.setViewportView(txtList);

        chkOnly.setText("Only");

        chkDate.setText("By Date");

        btnSabe.setText("Save");
        btnSabe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSabeActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(txtTema)
            .addComponent(txtDescripcion)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkDate)
                .addGap(8, 8, 8)
                .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jdcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSabe, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSabe)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jdcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkDate)
                            .addComponent(chkOnly))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSabeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSabeActionPerformed
        if (validarCampos()){
            try {
                //CODIGO PARA ASIGNAR FECHA ACTUAL o del sistema...
                jdcFecha.setDate(new Date());//ASIGANMOS VALOR DEL SISTEMA A JDCFECHA
                Date date = new Date();//LUEGO ESOS PARAMATROS LO GUARDAMOS EN UNA VARIABLE
                date = jdcFecha.getDate();
                date.setYear(jdcFecha.getCalendar().get(Calendar.YEAR));
                //************************************************************************
                Coneccion coneccion= new Coneccion();
//                MiBuscadorBE miBuscardorBE = new MiBuscadorBE(1, 0, txtTema.getText(),txtDescripcion.getText(),  date,  new Date());
                MiBuscadorBE miBuscardorBE = new MiBuscadorBE(1, 0, txtTema.getText(),txtList.getText(),  date,  new Date());
                cMiBuscadorBL miBuscadorBL = new cMiBuscadorBL();
                miBuscadorBL.Insertar(coneccion, miBuscardorBE);
            } catch (SQLException ex) {
                JOptionPane.showConfirmDialog(null, "No se inserto");
            }            
        }
    }//GEN-LAST:event_btnSabeActionPerformed

    private void txtTemaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemaKeyPressed
        bandera = 0;
        listar(bandera);        
    }//GEN-LAST:event_txtTemaKeyPressed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //CODIGO PARA ASIGNAR VALOR DE UN JDATECHOOSER A UNA VARIABLE DE TIPO DATE
        Date date,date2 = new Date();
//        date = jdcFecha.getDate();
//        date.setYear(jdcFecha.getCalendar().get(Calendar.YEAR));
//        //CODIGO PARA ASIGNAR VALOR DE UN JDATECHOOSER A UNA VARIABLE DE TIPO DATE
//        Date date2 = new Date();
//        date2 = jdcFechaFin.getDate();
//        date2.setYear(jdcFechaFin.getCalendar().get(Calendar.YEAR));
        date= tipoDate(jdcFecha);
        date2= tipoDate(jdcFechaFin);
//        date.setMonth(13);
//        date.setDate( jdcFecha.getCalendar().get(Calendar.DATE));
        
//        txtList.setText(" "+date.getDate()+"-"+(date.getMonth()+1)+"-"+date.getYear());
        txtList.append(" "+date.getDate()+"-"+(date.getMonth()+1)+"-"+date.getYear()+"\n");
        txtList.append(" "+date2.getDate()+"-"+(date2.getMonth()+1)+"-"+date2.getYear());
//////         //Formato de texot
//        JOptionPane.showConfirmDialog(this, jdcFecha.getDate());
////        //Extraer año
//        JOptionPane.showConfirmDialog(this, jdcFecha.getCalendar().get(Calendar.YEAR));
////        //Extraer mes
//        JOptionPane.showConfirmDialog(this, jdcFecha.getCalendar().get(Calendar.MONTH)+1);
////        //Extraer dia
//        JOptionPane.showConfirmDialog(this, jdcFecha.getCalendar().get(Calendar.DATE));
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyPressed
        bandera = 1;
        listar(bandera);
    }//GEN-LAST:event_txtDescripcionKeyPressed
    private void listar(int bandera){
        
        txtList.setText("");
        int accion = 1;//lista todos sin discriminar
        if (chkOnly.isSelected()){
            if (chkDate.isSelected()){
                if (bandera == 0){
                    accion = 2;//solo lista codigo con un parametro de fechas
                }
                else{
                    accion = 3;//solo lista descripcion con un parametro de fechas
                }
            }
            else{
                if (bandera == 0){
                    accion = 4;//solo lista codigo sin un parametro de fechas
                }
                else{
                    accion = 5;//solo lista descripcion sin un parametro de fechas
                }

            }
        }
        else{
            if (chkDate.isSelected()){
                accion = 6;//lista codigo y descripcion con un parametro de fechas
            }
            else{
                accion = 7;//lista codigo y descripcion sin un parametro de fechas
            }
        }
        try {
            Coneccion coneccion= new Coneccion();
            MiBuscadorBE miBuscardorBE = new MiBuscadorBE(accion, 0, txtTema.getText(),txtDescripcion.getText(),  tipoDate(jdcFecha),  tipoDate(jdcFechaFin));
            cMiBuscadorBLL miBuscadorBLL = new cMiBuscadorBLL();
            List<MiBuscadorBE> alist = miBuscadorBLL.Leer(coneccion, miBuscardorBE);
            for (MiBuscadorBE olist : alist) {
                txtList.append( olist.getId_MiBuscador()+"\t"+olist.getFecha()+"\t"+ olist.getCodigo()+"\n\t\t\t ::: "+olist.getDescripcion()+ "\n" );
            }
            
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Error al listar");
        }
    }
    public Date tipoDate(JDateChooser dateChooser){
        Date date = new Date();
        date = dateChooser.getDate();
        date.setYear(dateChooser.getCalendar().get(Calendar.YEAR));
//        txtList.append("\n"+date.getDate()+"-"+(date.getMonth()+1)+"-"+date.getYear()+"\n");//la manera correcta de mostrar en ec
        return date; 
    }
    public boolean validarCampos(){
        if(txtTema.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "la referencia no puede ser vacio");
            return false;
        }
        if(txtDescripcion.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "la descripcion no puede ser vacio");
            return false;
        }
        return true; 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiBuscardor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiBuscardor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiBuscardor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiBuscardor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MiBuscardor().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MiBuscardor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSabe;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkDate;
    private javax.swing.JCheckBox chkOnly;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private com.toedter.calendar.JDateChooser jdcFechaFin;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextArea txtList;
    private javax.swing.JTextField txtTema;
    // End of variables declaration//GEN-END:variables
}
